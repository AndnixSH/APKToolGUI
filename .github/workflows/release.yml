name: Build and Release APKToolGUI

on:
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag name for the release (e.g., v1.0.0)'
        required: true
      release_title:
        description: 'Title of the release (e.g., APKToolGUI Release v1.0.0)'
        required: true
      release_message:
        description: 'Description or message for the release notes'
        required: true

jobs:
  build-and-release:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.x'  # Automatically pulls the latest .NET 8 version

      - name: Restore missing packages using NuGet
        run: nuget restore APKToolGUI/APKToolGUI.sln

      - name: Build APKToolGUI
        run: dotnet build APKToolGUI/APKToolGUI/APKToolGUI.csproj --configuration Release

      - name: Publish as EXE
        run: dotnet publish APKToolGUI/APKToolGUI/APKToolGUI.csproj -c Release -r win-x64 --self-contained true -p:PublishSingleFile=true -p:IncludeAllContentForSelfExtract=true -o ./output

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.event.inputs.tag_name }}
          release_name: ${{ github.event.inputs.release_title }}
          body: ${{ github.event.inputs.release_message }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload EXE to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./output/APKToolGUI.exe
          asset_name: APKToolGUI-${{ github.event.inputs.tag_name }}.exe
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
